/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import classes.Carro;
import classes.Clientes;
import classes.Locacao;
import classes.PessoaFisica;
import classes.PessoaJuridica;
import dados.CarrosDados;
import dados.ClientesDados;
import dados.LocacaoDados;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author maria
 */
public class FPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form FPrincipal
     */
    public FPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        tabView = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCarros = new javax.swing.JTable();
        btnNovoCarro = new javax.swing.JButton();
        btnAlterarCarro = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnPesquisaCarro = new javax.swing.JButton();
        txtPlacaBusca = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtClienteBusca = new javax.swing.JTextField();
        btnPesquisaCliente = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnNovoCliente = new javax.swing.JButton();
        btnAlterarCliente = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblLocacao = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        btnBuscaLoc = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        btnNovaLoc = new javax.swing.JButton();
        btnExcluirLoc = new javax.swing.JButton();
        btnDevolucao = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        rdbCliente = new javax.swing.JRadioButton();
        rdbCarro = new javax.swing.JRadioButton();
        rdbPeriodo = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        rdbTodasLocs = new javax.swing.JRadioButton();
        rdbLocsDevolvidas = new javax.swing.JRadioButton();
        rdbLocsNaoDevolvidas = new javax.swing.JRadioButton();
        lblBuscaLoc = new javax.swing.JLabel();
        txtBuscaLoc = new javax.swing.JTextField();
        lblAte = new javax.swing.JLabel();
        txtDtFim = new javax.swing.JFormattedTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        lblDe = new javax.swing.JLabel();
        txtDtInicio = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuSair = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("cpnfexota - powered by VILANIANA");
        setResizable(false);

        tblCarros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Marca", "Modelo", "Ano", "Placa", "Valor da Diária"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCarros.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(tblCarros);

        btnNovoCarro.setText("Novo");
        btnNovoCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoCarroActionPerformed(evt);
            }
        });

        btnAlterarCarro.setText("Alterar");
        btnAlterarCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarCarroActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Busca de Carros");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Insira a placa do carro:");

        btnPesquisaCarro.setText("Pesquisar");
        btnPesquisaCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaCarroActionPerformed(evt);
            }
        });

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dados/logoVilaniana.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1098, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnAlterarCarro)
                .addGap(18, 18, 18)
                .addComponent(btnNovoCarro))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtPlacaBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPesquisaCarro)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(260, 260, 260))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(btnPesquisaCarro)
                            .addComponent(txtPlacaBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAlterarCarro)
                    .addComponent(btnNovoCarro))
                .addGap(30, 30, 30))
        );

        tabView.addTab("Estoque de Carros", jPanel1);

        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Endereço", "CPF ou CNPJ", "CNH", "Dt de Nascimento", "Desconto PJ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblClientes);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Busca de Clientes");

        txtClienteBusca.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtClienteBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClienteBuscaActionPerformed(evt);
            }
        });

        btnPesquisaCliente.setText("Pesquisar");
        btnPesquisaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaClienteActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Insira nome, CPF ou CNPJ:");

        btnNovoCliente.setText("Novo");
        btnNovoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoClienteActionPerformed(evt);
            }
        });

        btnAlterarCliente.setText("Alterar");
        btnAlterarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarClienteActionPerformed(evt);
            }
        });

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dados/logoVilaniana.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnAlterarCliente)
                .addGap(18, 18, 18)
                .addComponent(btnNovoCliente))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtClienteBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPesquisaCliente)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 215, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(208, 208, 208))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtClienteBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPesquisaCliente)))
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovoCliente)
                    .addComponent(btnAlterarCliente))
                .addGap(32, 32, 32))
        );

        tabView.addTab("Clientes", jPanel2);

        tblLocacao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Cliente (CPF/CNPJ)", "Carro (PLACA)", "Data Locação", "Data Entrega", "Dias Locados", "Total Locação"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblLocacao);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Locações");

        btnBuscaLoc.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnBuscaLoc.setText("Buscar");
        btnBuscaLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscaLocActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Total: R$");

        lblTotal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTotal.setText("00,00");

        btnNovaLoc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnNovaLoc.setText("Nova Locação");
        btnNovaLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovaLocActionPerformed(evt);
            }
        });

        btnExcluirLoc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnExcluirLoc.setText("Excluir");
        btnExcluirLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirLocActionPerformed(evt);
            }
        });

        btnDevolucao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDevolucao.setText("Devolução");
        btnDevolucao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDevolucaoActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Buscar Locação");

        jLabel8.setText("Sua busca será por:");

        buttonGroup1.add(rdbCliente);
        rdbCliente.setText("Cliente");
        rdbCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbClienteActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdbCarro);
        rdbCarro.setText("Carro");
        rdbCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbCarroActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdbPeriodo);
        rdbPeriodo.setText("Período");
        rdbPeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbPeriodoActionPerformed(evt);
            }
        });

        jLabel9.setText("Exibir:");

        buttonGroup2.add(rdbTodasLocs);
        rdbTodasLocs.setText("Todas as Locações");

        buttonGroup2.add(rdbLocsDevolvidas);
        rdbLocsDevolvidas.setText("Apenas Devolvidas");

        buttonGroup2.add(rdbLocsNaoDevolvidas);
        rdbLocsNaoDevolvidas.setText("Apenas Não Devolvidas");

        lblBuscaLoc.setText("Busca:");

        lblAte.setText("Até:");
        lblAte.setVisible(false);

        try {
            txtDtFim.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDtFim.setVisible(false);
        txtDtFim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDtFimActionPerformed(evt);
            }
        });

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);

        lblDe.setText("De:");
        lblDe.setVisible(false);

        try {
            txtDtInicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDtInicio.setVisible(false);

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dados/logoVilaniana.png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(455, 455, 455)
                        .addComponent(jLabel5))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(114, 114, 114)
                                .addComponent(rdbCliente)
                                .addGap(18, 18, 18)
                                .addComponent(rdbCarro)
                                .addGap(18, 18, 18)
                                .addComponent(rdbPeriodo))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(172, 172, 172)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(207, 207, 207)
                                .addComponent(jLabel9))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(rdbTodasLocs)
                                    .addGap(10, 10, 10)
                                    .addComponent(rdbLocsDevolvidas)
                                    .addGap(12, 12, 12)
                                    .addComponent(rdbLocsNaoDevolvidas)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(181, 181, 181)
                                .addComponent(btnBuscaLoc))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDtInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblDe))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAte)
                                    .addComponent(txtDtFim, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(125, 125, 125))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(135, 135, 135)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblBuscaLoc)
                                    .addComponent(txtBuscaLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(160, 160, 160)
                .addComponent(jLabel11)
                .addContainerGap(226, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(btnDevolucao)
                        .addGap(40, 40, 40)
                        .addComponent(btnExcluirLoc)
                        .addGap(37, 37, 37)
                        .addComponent(btnNovaLoc)
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(lblTotal)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 4, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdbCliente)
                            .addComponent(rdbCarro)
                            .addComponent(rdbPeriodo))
                        .addGap(4, 4, 4)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdbTodasLocs)
                            .addComponent(rdbLocsNaoDevolvidas)
                            .addComponent(rdbLocsDevolvidas))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblBuscaLoc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtBuscaLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDe, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAte))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDtInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDtFim, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscaLoc))
                    .addComponent(jSeparator5)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel11)
                        .addGap(67, 67, 67)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNovaLoc)
                            .addComponent(btnExcluirLoc)
                            .addComponent(btnDevolucao))))
                .addContainerGap())
        );

        tabView.addTab("Locação", jPanel3);

        jMenu1.setText("Arquivo");

        menuSair.setText("Sair");
        menuSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSairActionPerformed(evt);
            }
        });
        jMenu1.add(menuSair);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabView)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabView)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void menuSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_menuSairActionPerformed

    private void btnPesquisaCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaCarroActionPerformed

        try{
            String placa = txtPlacaBusca.getText().trim();
            int var = 0;

            if("".equals(placa)){
                var=1;
                this.carregarTabelaCarros(CarrosDados.lstCarros);

            }else{
                var=1;
                List<Carro> carrosTemp = CarrosDados.buscarCarroPelaPlacaParcial(placa, CarrosDados.lstCarros, false);
                if(carrosTemp.isEmpty()){
                    var=0;
                }
                this.carregarTabelaCarros(carrosTemp);
            }

            if (var == 0) {
                JOptionPane.showMessageDialog(this, "Placa não encontrada! Tente novamente ", "Ops!", JOptionPane.ERROR_MESSAGE);
                this.carregarTabelaCarros(CarrosDados.lstCarros);
                txtPlacaBusca.setText("");
            }

            tabView.repaint();

        }catch(Exception ex){
                JOptionPane.showMessageDialog(this,
                    "Não foi possível realizar a busca" + ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
            
        }
    }//GEN-LAST:event_btnPesquisaCarroActionPerformed

    private void btnAlterarCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarCarroActionPerformed

        try{

            if(CarrosDados.lstCarros.size() > 0){
                
                String placa = tblCarros.getValueAt(tblCarros.getSelectedRow(), 3).toString();
                Carro c = CarrosDados.buscarCarroPelaPlacaExata(placa, CarrosDados.lstCarros);

                if(c!=null){
                    if(JOptionPane.showConfirmDialog(this,
                        "Deseja alterar o veículo com placa " + c.getPlaca() + "?", "Alterar",
                        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION){

                    FCadCarro frmCadCarro = new FCadCarro(this, true);
                    frmCadCarro.lblCadastro.setText("Alterar cadastro");
                    Carro car = frmCadCarro.execute(c);

                    this.carregarTabelaCarros(CarrosDados.lstCarros);
                    this.carregarTabelaLocacao(LocacaoDados.lstLocacao);
                }
            }
        }

        }catch(Exception ex){
                JOptionPane.showMessageDialog(this,
                    "Você deve selecionar um carro primeiro. \n\n", "Atenção!", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnAlterarCarroActionPerformed

    private void btnNovoCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoCarroActionPerformed
        FCadCarro frmCadCarro = new FCadCarro(this, true);
        Carro c = frmCadCarro.execute();

        if(c != null){
            CarrosDados.lstCarros.add(c);
            this.carregarTabelaCarros(CarrosDados.lstCarros);
        }
        this.carregarTabelaCarros(CarrosDados.lstCarros);
    }//GEN-LAST:event_btnNovoCarroActionPerformed

    private void btnAlterarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarClienteActionPerformed
        try{

            if(ClientesDados.lstClientes.size() > 0){

                String cpfOuCnpj = tblClientes.getValueAt(tblClientes.getSelectedRow(), 2).toString();
                Clientes c = ClientesDados.buscarClientesPeloCpfOuCnpjExato(cpfOuCnpj, ClientesDados.lstClientes);                
                
                if(c != null){
                    if(JOptionPane.showConfirmDialog(this,
                            "Deseja alterar " + c.getNome() + "?", "Clientes", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)== JOptionPane.YES_OPTION){
                        
                        FCadCliente frmCadCliente = new FCadCliente(this, true);
                        frmCadCliente.lblCadCliente.setText("Alterar Cliente");
                        Clientes cliente = frmCadCliente.execute(c);
                        
                        this.carregarTabelaClientes(ClientesDados.lstClientes);
                        this.carregarTabelaLocacao(LocacaoDados.lstLocacao);
                    }
                }
            }
            
        } catch(Exception ex){
                JOptionPane.showMessageDialog(this, 
                        "Você deve selecionar um cliente primeiro. \n\n", "Atenção!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnAlterarClienteActionPerformed

    private void btnNovoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoClienteActionPerformed
        FCadCliente frmCadCliente = new FCadCliente(this, true);
        Clientes c = frmCadCliente.execute();
        
        if(c != null){
            ClientesDados.lstClientes.add(c);
            this.carregarTabelaClientes(ClientesDados.lstClientes);
        }
        this.carregarTabelaClientes(ClientesDados.lstClientes);
        
    }//GEN-LAST:event_btnNovoClienteActionPerformed

    private void txtClienteBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClienteBuscaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClienteBuscaActionPerformed

    private void btnPesquisaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaClienteActionPerformed
        try{
            String busca = txtClienteBusca.getText().trim();
            int var = 0;
            
            if("".equals(busca)){
                var=1;
                this.carregarTabelaClientes(ClientesDados.lstClientes);
                
            }else {
                List<Clientes> clientes = ClientesDados.buscarClienteParcial(busca, ClientesDados.lstClientes, false);
                var=1;
                if(clientes.isEmpty()){
                    var = 0;
                }
                this.carregarTabelaClientes(clientes);
            }
            
            if(var == 0){
                JOptionPane.showMessageDialog(this, "Cliente não encontrado! Tente novamente ", "Ops!", JOptionPane.ERROR_MESSAGE);
                txtClienteBusca.setText("");
                this.carregarTabelaClientes(ClientesDados.lstClientes);
            }
            tabView.repaint();
            
            
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this,
                "Não foi possível realizar a busca" + ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnPesquisaClienteActionPerformed

    private void btnNovaLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovaLocActionPerformed
        FCadLocacao frmCadLoc = new FCadLocacao(this, true);
        Locacao loc = frmCadLoc.execute();
        
            if(loc != null){
                LocacaoDados.lstLocacao.add(loc);
                
                this.carregarTabelaLocacao(LocacaoDados.lstLocacao);
            }

            this.carregarTabelaLocacao(LocacaoDados.lstLocacao);
    }//GEN-LAST:event_btnNovaLocActionPerformed

    private void btnDevolucaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDevolucaoActionPerformed
        try{
            if(LocacaoDados.lstLocacao.size() > 0){
                String cod = tblLocacao.getValueAt(tblLocacao.getSelectedRow(), 0).toString();
                
                Locacao loc = LocacaoDados.buscarLocacaoExata(cod, LocacaoDados.lstLocacao);
 
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy "+ " - " + " HH:mm");
                Date dt = loc.getDtEntrega();
                
                Date dtAtual = new Date();
                String dtFrmt = sdf.format(dtAtual);
                
 
                if(dt != null){
                    JOptionPane.showMessageDialog(this, "Este veículo já foi devolvido.");
                }else{
                    
                    cod = tblLocacao.getValueAt(tblLocacao.getSelectedRow(), 0).toString();
                    
                    if(loc != null){
                        double diaria = loc.getCarro().getValorDiariaLocacao();
                        double desconto = loc.getCliente().getDesconto();
                        int diasLocados = loc.calcularQtdDias(dtAtual);
                        
                        boolean a= true;
               
                        do{
                            if(JOptionPane.showConfirmDialog(this, 
                                    "Locação: \n\n" + 
                                    "Data da Locação: " + sdf.format(loc.getDtLocacao()) + "\n\n" +
                                    "Data da Entrega: " + dtFrmt + "\n\n" +
                                    "Quantidade de dias locados: " + diasLocados + "\n\n" +
                                    "Valor total da locação: R$ " + loc.calcularTotalDiaria(diaria, desconto, diasLocados) + "\n\n"+
                                    "DE ACORDO COM AS INFORMAÇÕES ACIMA?", "Devolução de veículo", JOptionPane.YES_NO_OPTION, 
                                    JOptionPane.QUESTION_MESSAGE)== JOptionPane.YES_OPTION){
                                
                                a = false;
                                loc.setDtEntrega(sdf.parse(dtFrmt));
                                loc.setValorTotalLocacao(loc.calcularTotalDiaria(diaria, desconto, diasLocados));
                                this.carregarTabelaLocacao(LocacaoDados.lstLocacao);
                            }else{
                                a = true;
                            }
                            
                        }while(a);
                    }                    
                }
            }
          
        }catch(Exception ex){
                JOptionPane.showMessageDialog(this, 
                    "Você deve selecionar uma locação primeiro. \n\n", "Atenção!", JOptionPane.WARNING_MESSAGE);
 
        }
        
    }//GEN-LAST:event_btnDevolucaoActionPerformed

    private void btnExcluirLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirLocActionPerformed
        try{
            
            if(LocacaoDados.lstLocacao.size() > 0){
                
                String cod = tblLocacao.getValueAt(tblLocacao.getSelectedRow(), 0).toString();
                Locacao loc = LocacaoDados.buscarLocacaoExata(cod, LocacaoDados.lstLocacao);
                
                long horaLoc = loc.getDtLocacao().getTime();
                
                Date dtAtual = new Date();
                long horaAtual = dtAtual.getTime();
                
                long verificacao = horaAtual - horaLoc;
                
                //No meu PC estava contando com o horário de verão;
                
                
                if ( loc != null){
                    
                    if (loc.getDtEntrega() != null){
                        JOptionPane.showMessageDialog(this, "Não é possível excluir locação devolvida.");

                    } else{
                        
                        //3.600.000 = 1 hora em milissegundos;
                        if(verificacao > 3600000){
                        JOptionPane.showMessageDialog(this, "Não é possível excluir locação.\n\n Tolerância de exclusão excedida");

                        } else{ //a exclusão de fato;
                            if(JOptionPane.showConfirmDialog(this, 
                                    "Deseja excluir a locação do carro: "+ loc.getCarro().getMarca()+ " " + loc.getCarro().getModelo() +"\n\n" + 
                                    "De placa: " + loc.getCarro().getPlaca() + "\n\n" +
                                    "Realizada pelo(a) cliente " + loc.getCliente().getNome() + "\n\n" +
                                    "De CPF/CNPJ: " + loc.getCliente().getCPFcnpj() + "?", "Excluir Locação", 
                                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION){
                                
                                LocacaoDados.lstLocacao.remove(loc);
                                this.carregarTabelaLocacao(LocacaoDados.lstLocacao);                                
                            }
                        }
                    }                 
                }
            }
            
        } catch(Exception ex){
            JOptionPane.showMessageDialog(this, 
                    "Não foi possível excluir a locação. \n\n" + ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnExcluirLocActionPerformed

    private void btnBuscaLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscaLocActionPerformed
        try{
            String busca = txtBuscaLoc.getText().trim();
            int ver = 0;
            
            if(rdbCliente.isSelected() || rdbCarro.isSelected()){
                List<Locacao> lstLocs = LocacaoDados.buscarLocacaoParcial(busca, LocacaoDados.lstLocacao, false);
                
                ver = 0;
                
                if(lstLocs.isEmpty()){
                    ver = 1;
                }
                
                if(rdbLocsDevolvidas.isSelected()){
                    List<Locacao> lstDevolvidas = new ArrayList();
                    
                    for(Locacao loc : lstLocs){

                        if(loc.getDtEntrega() != null){
                            lstDevolvidas.add(loc);
                        }
                    }
                    this.carregarTabelaLocacao(lstDevolvidas);
                    
                }else if(rdbLocsNaoDevolvidas.isSelected()){
                    List<Locacao> lstNDevolvidas = new ArrayList();
                    
                    for(Locacao loc : lstLocs){
                        
                        if(loc.getDtEntrega() == null){
                            lstNDevolvidas.add(loc);
                        }
                    }
                    this.carregarTabelaLocacao(lstNDevolvidas);
                    
                }else{

                    this.carregarTabelaLocacao(lstLocs);
                }
                
                if(ver == 1){
                    if(rdbCliente.isSelected()){
                        JOptionPane.showMessageDialog(this, "Cliente não encontrado! Tente novamente ", "Ops!", JOptionPane.ERROR_MESSAGE);
                        txtBuscaLoc.setText("");
                        this.carregarTabelaLocacao(LocacaoDados.lstLocacao);
                    }
                    
                    if(rdbCarro.isSelected()){
                        JOptionPane.showMessageDialog(this, "Carro não encontrado! Tente novamente ", "Ops!", JOptionPane.ERROR_MESSAGE);
                        txtBuscaLoc.setText("");
                        this.carregarTabelaLocacao(LocacaoDados.lstLocacao);
                    }
                }
                
            }
            tabView.repaint();
            
            if(rdbPeriodo.isSelected()){
                List<Locacao> lstLocsPeriodo = LocacaoDados.buscarLocacaoData(txtDtInicio.getText().trim(), txtDtFim.getText().trim(), LocacaoDados.lstLocacao);
                ver = 0;
                
                if(lstLocsPeriodo.isEmpty()){
                    ver=1;
                }
                
                if(rdbLocsDevolvidas.isSelected()){
                    List<Locacao> lstDevolvidas = new ArrayList();
                    
                    for(Locacao loc : lstLocsPeriodo){

                        if(loc.getDtEntrega() != null){
                            lstDevolvidas.add(loc);
                        }
                    }
                    this.carregarTabelaLocacao(lstDevolvidas);
                    
                }else if(rdbLocsNaoDevolvidas.isSelected()){
                    List<Locacao> lstNDevolvidas = new ArrayList();
                    
                    for(Locacao loc : lstLocsPeriodo){
                        
                        if(loc.getDtEntrega() == null){
                            lstNDevolvidas.add(loc);
                        }
                    }
                    this.carregarTabelaLocacao(lstNDevolvidas);
                    
                }else{

                    this.carregarTabelaLocacao(lstLocsPeriodo);
                }
                
                if(ver == 1){
                    if(rdbPeriodo.isSelected()){
                        JOptionPane.showMessageDialog(this, "Período não encontrado! Tente novamente ", "Ops!", JOptionPane.ERROR_MESSAGE);
                        txtBuscaLoc.setText("");
                        this.carregarTabelaLocacao(LocacaoDados.lstLocacao);
                    }
                }
            }
            tabView.repaint();
            
        } catch(Exception ex){
            JOptionPane.showMessageDialog(this, 
                    "Não foi possível realizar busca \n\n" + ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBuscaLocActionPerformed

    private void txtDtFimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDtFimActionPerformed
        
    }//GEN-LAST:event_txtDtFimActionPerformed

    private void rdbPeriodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbPeriodoActionPerformed
        if(rdbPeriodo.isSelected()){
            lblAte.setVisible(true);
            txtDtFim.setVisible(true);
            lblDe.setVisible(true);
            txtDtInicio.setVisible(true);
            lblBuscaLoc.setVisible(false);
            txtBuscaLoc.setVisible(false);
        }
    }//GEN-LAST:event_rdbPeriodoActionPerformed

    private void rdbCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbCarroActionPerformed
        if(rdbCarro.isSelected()){
            lblAte.setVisible(false);
            txtDtFim.setVisible(false);
            lblDe.setVisible(false);
            txtDtInicio.setVisible(false);
            lblBuscaLoc.setText("Insira a placa do carro:");
            lblBuscaLoc.setVisible(true);
            txtBuscaLoc.setVisible(true);
        }
    }//GEN-LAST:event_rdbCarroActionPerformed

    private void rdbClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbClienteActionPerformed
        if(rdbCliente.isSelected()){
            lblAte.setVisible(false);
            txtDtFim.setVisible(false);
            lblDe.setVisible(false);
            txtDtInicio.setVisible(false);
            lblBuscaLoc.setText("Insira o CPF ou CNPJ:");
            lblBuscaLoc.setVisible(true);
            txtBuscaLoc.setVisible(true);
        }
    }//GEN-LAST:event_rdbClienteActionPerformed

    private void carregarTabelaCarros(List<Carro> lstCarros){
        try{
            
            DefaultTableModel modelo =  (DefaultTableModel) tblCarros.getModel();
            modelo.getDataVector().removeAllElements();
            
            for(Carro car : lstCarros){

                Vector v = new Vector();
                v.add(car.getMarca());
                v.add(car.getModelo());
                v.add(car.getAno());
                v.add(car.getPlaca());
                v.add(car.getValorDiariaLocacao());
                
                modelo.addRow(v);
            }
            tabView.repaint();
            
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this,
                    "Não foi possível carregar a tabela \n\n" + ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void carregarTabelaClientes(List<Clientes> lstClientes){
        try{
            DefaultTableModel modelo = (DefaultTableModel) tblClientes.getModel();
            modelo.getDataVector().removeAllElements();
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            
            for(Clientes cli : lstClientes){
                                
                Vector v = new Vector();
                v.add(cli.getNome());
                v.add(cli.getEndereco());
                v.add(cli.getCPFcnpj());
                v.add(cli.getCNH());
                
                if( cli instanceof PessoaFisica){
                    PessoaFisica pf = (PessoaFisica) cli;
                    v.add(sdf.format(cli.getDtNasc()));
                    
                }else{
                    PessoaJuridica pj = (PessoaJuridica) cli;
                    v.add(cli.getDtNascPJ());
                }

                v.add(cli.getDesconto());

                modelo.addRow(v);
            }
            tabView.repaint();
            
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, 
                    "Não foi possível carregar a tabela \n\n" + ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void carregarTabelaLocacao(List<Locacao> lstLoc) {
        
        try {
            
            DefaultTableModel modelo = (DefaultTableModel) tblLocacao.getModel();
            modelo.getDataVector().removeAllElements();
            
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            
            double total = 0;
            
            for (Locacao loc : lstLoc) {
                
                Vector v = new Vector();
                v.add(Integer.toString(loc.getCodigo()));
                v.add((loc.getCliente()).getNome() + " - " + (loc.getCliente()).getCPFcnpj());
                v.add((loc.getCarro()).getPlaca() + " - " + (loc.getCarro()).getModelo());
                v.add(sdf.format(loc.getDtLocacao()));
                
                if(loc.getDtEntrega() != null){
                    v.add(sdf.format(loc.getDtEntrega()));
                    v.add(Integer.toString(loc.getQtdDiasLocados()));
                    v.add(Double.toString(loc.getValorTotalLocacao()));
                }else{
                    v.add(loc.getDtEntrega());
                    v.add(" ");
                    v.add(" ");
                }

                total += loc.getValorTotalLocacao();
                
                lblTotal.setText(Double.toString(total));
                
                modelo.addRow(v);                
            }            
            tabView.repaint();
            
        } catch (Exception ex) {            
            JOptionPane.showMessageDialog(this, "Não foi possível carregar a tabela \n\n" + ex.getMessage(), "ERRO!", JOptionPane.ERROR_MESSAGE);            
        }        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterarCarro;
    private javax.swing.JButton btnAlterarCliente;
    private javax.swing.JButton btnBuscaLoc;
    private javax.swing.JButton btnDevolucao;
    private javax.swing.JButton btnExcluirLoc;
    private javax.swing.JButton btnNovaLoc;
    private javax.swing.JButton btnNovoCarro;
    private javax.swing.JButton btnNovoCliente;
    private javax.swing.JButton btnPesquisaCarro;
    private javax.swing.JButton btnPesquisaCliente;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JLabel lblAte;
    private javax.swing.JLabel lblBuscaLoc;
    private javax.swing.JLabel lblDe;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JMenuItem menuSair;
    private javax.swing.JRadioButton rdbCarro;
    private javax.swing.JRadioButton rdbCliente;
    private javax.swing.JRadioButton rdbLocsDevolvidas;
    private javax.swing.JRadioButton rdbLocsNaoDevolvidas;
    private javax.swing.JRadioButton rdbPeriodo;
    private javax.swing.JRadioButton rdbTodasLocs;
    private javax.swing.JTabbedPane tabView;
    private javax.swing.JTable tblCarros;
    public javax.swing.JTable tblClientes;
    private javax.swing.JTable tblLocacao;
    private javax.swing.JTextField txtBuscaLoc;
    private javax.swing.JTextField txtClienteBusca;
    private javax.swing.JFormattedTextField txtDtFim;
    private javax.swing.JFormattedTextField txtDtInicio;
    private javax.swing.JTextField txtPlacaBusca;
    // End of variables declaration//GEN-END:variables
}
